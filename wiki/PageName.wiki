#labels Phase-Deploy
About TFTPgui.

= Introduction =

TFTPgui Version : 1.0

This program is a TFTP server.

It is intended to run as a user initiated program, rather than a service daemon, and displays a gui interface allowing the user to stop and start the tftp server.

It provides a simple tftp server for engineers to download configuration files from equipment such as routers and switches.

It has been tested on Windows XP and Linux platforms.

= Downloads =

The program is provided in three downloadable formats:

An installer for Windows: which includes an embedded Python interpreter - this should be used by most Windows users.

An installer for Windows: which only contains the TFTP Python files - and assumes you already have Python 2.4 or above installed.  This is useful for those of you who understand and use Python - you should have the .pyw extension associated with your Python interpreter.

A tar file of the TFTPgui Python files: This could be used by Linux users; untar it into a directory of your choice, and running "python tftpgui.py" will run the program.


= Usage =

Running TFTPgui (typically using the "python tftpgui.py" command under Linux, or just choosing the menu or desktop icon under Windows), the program presents you with a graphical window, with start, stop, setup and exit buttons.

Start - will start the server, which will then listen for file transfers from remote tftp clients.

Stop - will stop the server.

Setup - will open a window giving various options described below.

Exit - will close the program.



= Setup Options =

TFTP ROOT Folder:  set the folder where files will be sent and received

TFTP LOGS Folder:  During transmission, the program writes log entries, these are held in this folder, which you can set.

Allow access from any remote IP Address, or just a specified subnet:

If any remote address is allowed, then any client can call this server.

If a subnet is specified, then you may input the subnet and mask, and the server will only accept calls from clients within this subnet.  If you wish to limit remote access from a single device, set the subnet to the remote device IP address, and the mask to 32.

PORT: The port which the tftp server listens on, as standard this is 69

It should be noted that on Linux, to set up a server listening on any port below 1000 requires root permission, therefore you will need to be root (or use sudo) to run this program on port 69.

APPLY   - Save and implement the options.

CANCEL  - Discard any option changes you have done.

DEFAULT - Set options to the initial defaults.


= Developer Details =

TFTPgui consists of the files:

tftpgui.py     The main program - when run, it starts the gui

(For windows users, it may be called tftpgui.pyw)

The following files are in the same folder, and are called by tftpgui.py:

ipv4_parse.py  Used to parse IP addresses

stopwatch.py   Used to time packets

tftpcfg.py     Used to parse and save configuration values

tftphq.py      Implements the tftp protocol

When tftpgui.py is run, it creates the file tftpgui.cfg to hold configuration data.

It also requires two directories, one to hold logs, which are created during file
transfers, and one to act as the root folder to which files are put, and from which files are pulled.

As default, these are the folders tftplogs and tftproot which are under the folder where the above files are held.

These two folders can be set to other folders of your choice from within the gui.

The graphical environment is Tkinter, and apart from the files listed above, there are no dependencies outside of the standard Python installation.


